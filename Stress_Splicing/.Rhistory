r=(12,12,12,)
c
r=c(12,12,12,)
r=12,13,13
r=c(12,13,13)
e=c(13,14,14)
c=c(13,13,4)
rec
r*e*c
r*
e*
c*.
fesdf
mySum(input_1 = 1, 3)
input_1 <- 20
mySum <- function(input_1, input_2 = 10) {
output <- input_1 + input_2
return(output)
}
}
mySum(input_1 = 1, 3)
mySum(3)
mySum(input_2 = 3)
center <- function(data, desired) {
new_data <- (data - mean(data)) + desired
return(new_data)
}
z<-c(1,2,3,4,5,6,7,8,9,10)
center(z)
center(z,4)
mean(center(z,4))
z<-c(0,0,0,0)
center(z,3)
dat <- read.csv(file = "data/inflammation-01.csv", header = FALSE)
centered <- center(dat[, 4], 0)
head(centered)
install.packages("qtl2", repos="http://rqtl.org/qtl2cran")
z<-c(0,0,0)
z<-c(0,0,0,0)
print("Hello")
print("Bom dia")
source('~/stapleton_lab/Test2.R')
install.packages("qtl")
vqtl
install.packages("purrr")
install.packages("readr")
install.packages("dplyr")
print("Bom Dia meus amigos!")
library(qtl)
library(vqtl)
library(purrr)
library(readr)
library(dplyr)
library(qtl)
library(qtl)
library(qtl)
summary(hyper)
data("hyper")
summary(hyper)
nind(hyper)
nphe(hyper)
nchr(hyper)
totmar(hyper)
nmar(hyper)
plot(hyper)
data
library(qtl)
library(vqtl)
library(purrr)
library(readr)
library(dplyr)
install.packages("readr")
library(qtl)
library(vqtl)
library(purrr)
library(readr)
library(dplyr)
dat <- read.cross(file = "./Manching_Practice_Data.csv")
summary(dat)
#vQTL with simulated data
library(qtl)
library(vqtl)
library(purrr)
library(readr)
library(dplyr)
# setwd("/Users/mbyrd/StapletonLab/Stapleton_Lab/vQTL_Practice")
# Michael Stampede Path
# setwd ("/work/04908/mcb4548/stampede2/GitHub/Stapleton_Lab/vQTL_Practice")
dat <- read.cross(file = "./Manching_Practice_Data.csv")
# Not sure what this does. Was told by Thomas its needed.
dat <- drop.nullmarkers(dat)
#scan with variance
dat <- calc.genoprob(dat)
###
#vQTL with simulated data
library(qtl)
library(vqtl)
library(purrr)
library(readr)
library(dplyr)
# setwd("/Users/mbyrd/StapletonLab/Stapleton_Lab/vQTL_Practice")
# Michael Stampede Path
# setwd ("/work/04908/mcb4548/stampede2/GitHub/Stapleton_Lab/vQTL_Practice")
dat <- read.cross(file = "./Manching_Practice_Data.csv")
# Not sure what this does. Was told by Thomas its needed.
dat <- drop.nullmarkers(dat)
#scan with variance
dat <- calc.genoprob(dat)
###
### Combining Genomes and Mo###
library(stringr)
#setwd("C:/Users/twili/Desktop/GIThub/StapletonLab/StressSplicing")
setwd("/Users/andrewnorris/stapleton_lab/JCastillo/StapletonLab/StressSplicing")
dat = read.csv(file = "Plant_Height.csv", header = TRUE)
#Take out unneeded IBMB###, NA, B73 loci
dat = dat[-(907:938),-(4:5)]
#Create Categorical Variables for PH207*Mo### and Mo### by gene breed
BreedType = ifelse(substr(dat$Genotype, 1,1)=="M", "Inbred", "Outbred")
dat = cbind(dat, BreedType)
#Add in SNP info from CSV, beginning with column six
snp = read.csv(file = "IBM94markerset08seq.csv")
snp = snp[,-(1:5)]
#Create zero matrix to which data will input
relevant = data.frame(matrix(rep(0,length(dat$Genotype)*dim(snp)[1]), ncol = dim(snp)[1]))
#From
dat2 = sapply(str_sub(dat$Genotype,-3,-1), function(x){
column = which(str_sub(colnames(snp),-3,-1) == x)
vect = data.frame(as.character(snp[,column]))
return(vect)
})
View(dat2)
#From "Genotype" values,
dat2 = sapply(str_sub(dat$Genotype,-3,-1), function(x){
column = which(str_sub(colnames(snp),-3,-1) == x)
vect = data.frame(as.character(snp[,column]))
return(vect)
})
dat2 = as.data.frame(matrix(unlist(dat2), nrow = dim(dat)[1], byrow = TRUE))
View(dat2)
#Add matched Mo### values to data frame
dat2 = as.data.frame(matrix(unlist(dat2), nrow = dim(dat)[1], byrow = TRUE))
colnames(dat2) = colnames()
library(beepr)
beep()
dim(dat3);dim(snp)
#####Adding back in the Trait info#####
dat3 = cbind(dat2$Height,dat2[,1:3],dat3)
### Combining Genomes and Mo###
library(stringr)
setwd("/Users/andrewnorris/stapleton_lab/Stress_Splicing")
#setwd("C:/Users/twili/Desktop/GIThub/StapletonLab/StressSplicing")
dat = read.csv(file = "Plant_Height.csv", header = TRUE)
#Take out unneeded IBMB###, NA, B73 loci
dat = dat[-(907:938),-(4:5)]
#Create Categorical Variables for PH207*Mo### and Mo### by gene breed
BreedType = ifelse(substr(dat$Genotype, 1,1)=="M", "Inbred", "Outbred")
dat = cbind(dat, BreedType)
#Add in SNP info from Marker data CSV, beginning with column six
snp = read.csv(file = "IBM94markerset08seq.csv")
snp = snp[,-(1:5)]
#Create zero matrix to which data will input
relevant = data.frame(matrix(rep(0,length(dat$Genotype)*dim(snp)[1]), ncol = dim(snp)[1]))
#From "Genotype" values, match Plant Height data and Marker data by detecting last three digits of Mo###'s
dat2 = sapply(str_sub(dat$Genotype,-3,-1), function(x){
column = which(str_sub(colnames(snp),-3,-1) == x)
vect = data.frame(as.character(snp[,column]))
return(vect)
})
#Add matched Mo### values to data frame
dat2 = as.data.frame(matrix(unlist(dat2), nrow = dim(dat)[1], byrow = TRUE))
View(dat2)
#####Adding marker location and chromosome#####
aux = matrix(snp$incre_new, nrow= 1)
#####Adding back in the Trait info#####
dat3 = cbind(dat2$Height,dat2[,1:3],dat3)
relevant = data.frame(matrix(rep(0,length(dat$sampleID)*dim(exp_data)[1]), ncol = dim(exp_data)[1]))
## If zero matrix is the way to go... #Create zero matrix to which data will input
relevant = data.frame(matrix(rep(0,length(data$sampleID)*dim(exp_data)[1]), ncol = dim(exp_data)[1]))
## If zero matrix is the way to go... #Create zero matrix to which data will input
relevant = data.frame(matrix(rep(0,length(data$sampleID)*dim(exp_data)[1]), ncol = dim(exp_data)[1]))
# Mac Directory
setwd("/Users/andrewnorris/Stapleton_Lab/Stress_Splicing/2018_6")
# Mac Directory
setwd("/Users/andrewnorris/Stapleton_Lab/Stress_Splicing/2018_6")
# Mac Directory
setwd("/Users/andrewnorris/Stapleton_Lab/Stress_Splicing/2018_6")
library(tidyr)
# Mac Directory
setwd("/Users/andrewnorris/Stapleton_Lab/Stress_Splicing/2018_6")
# Mac Directory
setwd("Users/andrewnorris/Stapleton_Lab/Stress_Splicing/2018_6")
# Read in Calibration Data
data <- read.csv(file = "2018_6_1_Calibrated_Data_Frame_with_Derivatives.csv")
# Mac Directory
setwd("/Users/andrewnorris/Stapleton_Lab/Stress_Splicing/2018_6")
